<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">

	<!-- 게시글 삽입 -->
  	<insert id="boardInsert" parameterType="Board" useGeneratedKeys="true">
  	
  		<selectKey order="BEFORE" resultType="_int" keyProperty="boardNo">
  			SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
  		</selectKey>
  	
  			INSERT INTO BOARD
  			VALUES( #{boardNo},
  					#{boardTitle},
  					#{boardContent},
  					DEFAULT, DEFAULT, DEFAULT, DEFAULT,
  					#{memberNo},
  					#{boardCode}  )
  	</insert>
  	
  	
  	<!-- 
  	 	동적 SQL 중 <foreach>
  	 	- 특정 sql 구문을 반복할 때 사용
  	 	- 반복되는 사이에 구분자를 추가할 수 있음.
  	 -->
  	
  	<!-- 이미지 리스트(여러개)삽입 -->
  	<insert id="insertImageList" parameterType="list">
  		INSERT INTO "BOARD_IMG"
  		SELECT SEQ_IMG_NO.NEXTVAL, A.*
  		FROM (
  			
  			<foreach collection="list" item="img" separator=" UNION ALL ">
  				SELECT #{img.imagePath} IMG_PATH,
  					#{img.imageReName} IMG_RENAME,
  					#{img.imageOriginal} IMG_ORIGINAL,
  					#{img.imageOrder} IMG_ORDER,
  					#{img.boardNo} BOARD_NO
  				FROM DUAL
  			</foreach>
  		) A
  	</insert>
  	
  	
  	<!-- 게시글 수정 -->
  	<update id="boardUpdate">
  		UPDATE "BOARD" SET
  		BOARD_TITLE = #{boardTitle},
  		BOARD_CONTENT = #{boardContent},
  		B_UPDATE_DATE = SYSDATE
  		WHERE BOARD_CODE = #{boardCode}
  		AND BOARD_NO = #{boardNo}
  	</update>
  	
  	
  	<!-- 이미지 삭제 -->
  	<delete id="imageDelete">
  		DELETE FROM "BOARD_IMG"
  		WHERE BOARD_NO = #{boardNo}
  		AND IMG_ORDER IN ( ${deleteList} )
  	</delete>
  	
  	
  	<!-- 이미지 수정 -->
	<update id="imageUpdate">
		UPDATE "BOARD_IMG" SET
		IMG_PATH = #{imagePath},
		IMG_ORIGINAL = #{imageOriginal},
		IMG_RENAME = #{imageReName}
		WHERE BOARD_NO = #{boardNo}
		AND IMG_ORDER = #{imageOrder}
	</update>
  	
  	<!-- 이미지 삽입 -->
	<insert id="imageInsert">
		INSERT INTO "BOARD_IMG"
		VALUES(SEQ_IMG_NO.NEXTVAL, #{imagePath}, #{imageReName},
			#{imageOriginal}, #{imageOrder}, #{boardNo}
		)
	</insert>
  	
  	
  	<!-- 게시글 삭제 -->
 	<update id="boardDelete">
		UPDATE "BOARD" SET
		BOARD_DEL_FL = 'Y'
		WHERE BOARD_CODE = #{boardCode}
		AND BOARD_NO = #{boardNo}
	</update>
  	
  	
  	 	
  	<!-- 특정 게시판의 삭제되지 않고, 검색 조건이 일치하는 게시글 수 조회 -->
  	<select id="getListCount_search" resultType="_int">
  		SELECT COUNT(*) FROM BOARD
  		
  		<!-- 작성자 검색 -->
  		<if test='key == "w"'>
  			JOIN "MEMBER" USING(MEMBER_NO)
  		</if>
  		
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode}
		
		<choose>
			<when test='key == "t"'>
				<!-- 제목 -->
				AND BOARD_TITLE LIKE '%${query}%'
			</when>
			
			<when test='key == "c"'>
				<!-- 내용 -->
				AND BOARD_CONTENT LIKE '%${query}%'
			</when>
			
			<when test='key == "tc"'>
				<!-- 제목 + 내용 -->
				AND (BOARD_TITLE LIKE '%${query}%' OR BOARD_CONTENT LIKE '%${query}%')
			</when>
			
			<when test='key == "w"'>
				<!-- 작성자(닉네임) -->
				AND MEMBER_NICKNAME LIKE '%${query}%'
			</when>
			
		</choose>
		
  	</select>
  	
  	
  	<!-- CDATA 태그 : 해당 태그 내부에 작성된 것은 모두 문자로 취급 -->
  	<!-- 게시글 목록 조회(검색) -->
  	<select id="selectBoardList_search" resultMap="board_rm">
  		SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, READ_COUNT,
			
			<![CDATA[
				CASE
					WHEN SYSDATE - B_CREATE_DATE < 1/24/60
					THEN FLOOR( (SYSDATE - B_CREATE_DATE) * 24 * 60 * 60 ) || '초 전'
					WHEN SYSDATE - B_CREATE_DATE < 1/24
					THEN FLOOR( (SYSDATE - B_CREATE_DATE) * 24 * 60) || '분 전'
					WHEN SYSDATE - B_CREATE_DATE < 1
					THEN FLOOR( (SYSDATE - B_CREATE_DATE) * 24) || '시간 전'
					ELSE TO_CHAR(B_CREATE_DATE, 'YYYY-MM-DD')
				END B_CREATE_DATE,
			]]>
			
			(SELECT COUNT(*) FROM "COMMENT" C
			 WHERE C.BOARD_NO = B.BOARD_NO) COMMENT_COUNT,
			(SELECT COUNT(*) FROM BOARD_LIKE L
			 WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT,
			(SELECT IMG_PATH || IMG_RENAME FROM BOARD_IMG I
			WHERE I.BOARD_NO = B.BOARD_NO
			AND IMG_ORDER = 0) THUMBNAIL
		FROM "BOARD" B
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode}
		
		<choose>
			<when test='key == "t"'>
				<!-- 제목 -->
				AND BOARD_TITLE LIKE '%${query}%'
			</when>
			
			<when test='key == "c"'>
				<!-- 내용 -->
				AND BOARD_CONTENT LIKE '%${query}%'
			</when>
			
			<when test='key == "tc"'>
				<!-- 제목 + 내용 -->
				AND (BOARD_TITLE LIKE '%${query}%' OR BOARD_CONTENT LIKE '%${query}%')
			</when>
			
			<when test='key == "w"'>
				<!-- 작성자(닉네임) -->
				AND MEMBER_NICKNAME LIKE '%${query}%'
			</when>
			
		</choose>
		
		
		ORDER BY BOARD_NO DESC
  	</select>
  	
  
</mapper>
